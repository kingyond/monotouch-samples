// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace MonoCatalog {

	// Base type probably should be MonoTouch.UIKit.UIViewController or subclass
	[Foundation.Register("PickerViewController")]
	public partial class PickerViewController {

		private UIKit.UIView __mt_view;

		private UIKit.UISegmentedControl __mt_buttonBarSegmentedControl;

		private UIKit.UISegmentedControl __mt_pickerStyleSegmentedControl;

		private UIKit.UILabel __mt_segmentLabel;

		#pragma warning disable 0169
		[Foundation.Export("togglePickerStyle:")]
		partial void togglePickerStyle (UIKit.UISegmentedControl sender);

		[Foundation.Export("togglePickers:")]
		partial void togglePickers (UIKit.UIBarButtonItem sender);

		[Foundation.Connect("view")]
		private UIKit.UIView view {
			get {
				this.__mt_view = ((UIKit.UIView)(this.GetNativeField("view")));
				return this.__mt_view;
			}
			set {
				this.__mt_view = value;
				this.SetNativeField("view", value);
			}
		}

		[Foundation.Connect("buttonBarSegmentedControl")]
		private UIKit.UISegmentedControl buttonBarSegmentedControl {
			get {
				this.__mt_buttonBarSegmentedControl = ((UIKit.UISegmentedControl)(this.GetNativeField("buttonBarSegmentedControl")));
				return this.__mt_buttonBarSegmentedControl;
			}
			set {
				this.__mt_buttonBarSegmentedControl = value;
				this.SetNativeField("buttonBarSegmentedControl", value);
			}
		}

		[Foundation.Connect("pickerStyleSegmentedControl")]
		private UIKit.UISegmentedControl pickerStyleSegmentedControl {
			get {
				this.__mt_pickerStyleSegmentedControl = ((UIKit.UISegmentedControl)(this.GetNativeField("pickerStyleSegmentedControl")));
				return this.__mt_pickerStyleSegmentedControl;
			}
			set {
				this.__mt_pickerStyleSegmentedControl = value;
				this.SetNativeField("pickerStyleSegmentedControl", value);
			}
		}

		[Foundation.Connect("segmentLabel")]
		private UIKit.UILabel segmentLabel {
			get {
				this.__mt_segmentLabel = ((UIKit.UILabel)(this.GetNativeField("segmentLabel")));
				return this.__mt_segmentLabel;
			}
			set {
				this.__mt_segmentLabel = value;
				this.SetNativeField("segmentLabel", value);
			}
		}
	}
}
